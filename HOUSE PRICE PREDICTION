# House Price Prediction using Linear Regression

# Step 1: Import Libraries
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error, r2_score

# Step 2: Create Sample Dataset
data = {
    'square_footage': [1500, 1800, 2400, 3000, 3500],
    'bedrooms': [3, 4, 3, 5, 4],
    'bathrooms': [2, 3, 2, 4, 3],
    'price': [300000, 400000, 500000, 600000, 650000]
}
df = pd.DataFrame(data)

# Step 3: Define Features and Target
X = df[['square_footage', 'bedrooms', 'bathrooms']]
y = df['price']

# Step 4: Split Dataset
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Step 5: Train Linear Regression Model
model = LinearRegression()
model.fit(X_train, y_train)

# Step 6: Predict on Test Set
y_pred = model.predict(X_test)

# Step 7: Evaluate Model
print("Mean Squared Error:", mean_squared_error(y_test, y_pred))
print("RÂ² Score:", r2_score(y_test, y_pred))

# Step 8: Show Model Coefficients
print("\nModel Coefficients:")
for feature, coef in zip(X.columns, model.coef_):
    print(f"{feature}: {coef:.2f}")
print("Intercept:", model.intercept_)

# Step 9: Predict Price for a New House
new_house = pd.DataFrame({
    'square_footage': [2200],
    'bedrooms': [3],
    'bathrooms': [2]
})
predicted_price = model.predict(new_house)
print("\nPredicted Price for New House (2200 sqft, 3 bed, 2 bath):", round(predicted_price[0], 2))

# Step 10: Visualize Actual vs Predicted Prices
plt.scatter(y_test, y_pred, color='blue')
plt.plot([min(y_test), max(y_test)], [min(y_test), max(y_test)], color='red', linestyle='--')
plt.xlabel("Actual Price")
plt.ylabel("Predicted Price")
plt.title("Actual vs Predicted House Prices")
plt.grid(True)
plt.show()
